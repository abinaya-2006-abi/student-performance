# -*- coding: utf-8 -*-
"""student performance.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13Txzxym7R1mrFiuvx6IqmnftLqpZA-k-
"""

import pandas as pd
import numpy as np
df=pd.read_csv("/content/Student_Performance - Student_Performance (1).csv")
display(df.head())
display(df.tail())

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

X = df.drop("Performance Index", axis=1)   # replace "target_column" with your actual target
y = df["Performance Index"]

# Split the dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the linear regression model
model = LinearRegression()

print(X_train)

print(y_train)

print(X_train.select_dtypes(include=['object']))

from sklearn.preprocessing import LabelEncoder

le = LabelEncoder()
X_train['Extracurricular Activities'] = le.fit_transform(X_train['Extracurricular Activities'])
X_test['Extracurricular Activities'] = le.transform(X_test['Extracurricular Activities'])

model.fit(X_train, y_train)

import matplotlib.pyplot as plt

# Predict
y_pred = model.predict(X_test)
print(y_pred)

print(y_test)

import matplotlib.pyplot as plt

# Plot Actual vs Predicted values
plt.figure(figsize=(8, 6))
plt.scatter(y_test, y_pred, color='blue', alpha=0.6, label="Predicted")
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'r--', lw=2, label="Perfect Fit")
plt.xlabel("Actual Values")
plt.ylabel("Predicted Values")
plt.title("Actual vs Predicted")
plt.legend()
plt.grid(True)
plt.show()

from sklearn.metrics import mean_squared_error, r2_score
import numpy as np

# Calculate metrics
r2 = r2_score(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)

# Print metrics
print(f"RÂ² Score: {r2:.4f}")
print(f"Mean Squared Error (MSE): {mse:.4f}")
print(f"Root Mean Squared Error (RMSE): {rmse:.4f}")